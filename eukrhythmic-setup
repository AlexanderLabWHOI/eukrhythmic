configfile: "config.yaml"

import io
import os
from os import listdir
from os.path import isfile, join
import sys
import pandas as pd
import numpy as np
import pathlib
from snakemake.exceptions import print_exception, WorkflowError  
sys.path.insert(1, 'scripts')

# Import relevant variable from config; exit if not supplied
import importworkspace
from importworkspace import *
os.system("python " + os.path.join("scripts", "importworkspace.py"))

# Contains function to check that variables are present and formatted correctly beyond provided values in config file
import checkrequirements
from checkrequirements import *

## CHECK THAT ALL REQUIREMENTS ARE SATISFIED BY EXECUTING checkrequirements() from `scripts/checkrequirements.py` ##
checkrequirementsfct()

include: "rules/01-quality.smk"
include: "rules/02-trim.smk"
include: "rules/03-alignment-spike.smk"
include: "rules/04-quality.smk"

ruleorder: trimmomatic > trimmomatic_SE

rule all:
    input:
        # FASTQC OUTPUTS
        qual01_fastqc = expand([os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                        "01-quality", "01a-fastqc", "{sample}_{num}_fastqc.html"),
                        os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                        "01-quality", "01a-fastqc", "{sample}_{num}_fastqc.zip")], zip, 
                        base = OUTPUTDIR, sample = filenames, num = singleorpaired),
        # MULTIQC OUTPUTS
        qual01_multiqc = expand(os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                                            "01-quality", "01b-multiqc",\
                                            "multiqc_report.html"), zip,
                                            base = OUTPUTDIR),
        # TRIMMOMATIC OUTPUTS
        trim02 = expand(os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                          "02-trim",\
                          "{sample}_1.trimmed.fastq.gz"), zip, 
                         base = OUTPUTDIR, sample = filenames),
        # BBMAP OUTPUTS
        alignment03 = expand(os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                          "03-alignment-spike", "{sample}_{num}.clean.fastq.gz"),\
                          zip, base = OUTPUTDIR,
                          sample = filenames, num = singleorpaired),
        # FASTQC 2 OUTPUTS (trimmed)
        qual04_fastqc = expand([os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                                "04-quality","{sample}_{num}.trimmed_fastqc.html"),\
                                os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                                "04-quality", "{sample}_{num}.trimmed_fastqc.zip")],
                                zip, base = OUTPUTDIR, sample = filenames, num = singleorpaired),
        # MULTIQC 2 OUTPUTS
        qual04_multiqc = expand(os.path.join(OUTPUTDIR, "intermediate-files", "01-setup",\
                                  "04-quality", "multiqc",\
                                  "multiqc_report.html"), zip,\
                          base = OUTPUTDIR)
