configfile: "config.yaml"

import io
import os
import pandas as pd
from snakemake.exceptions import print_exception, WorkflowError

OUTPUTDIR = config['outputDIR']
ASSEMBLYFILE = pd.read_csv(config["metaT_sample"], sep = "\t")
ASSEMBLYDICT = dict(zip(list(ASSEMBLYFILE.AssemblyGroup), list(ASSEMBLYFILE.SampleName)))
DROPSPIKE = config['dropspike']
SCRATCHDIR = config['scratch']
KMERVALS = list(config['kmers'])
MINKVAL = int(min(KMERVALS))
MAXKVAL = int(max(KMERVALS))
PREFIXKS = " ".join([".k" + str(curr) for curr in KMERVALS])
    
rule transabyssmerge:
    input:
        files = [os.path.join(OUTPUTDIR, "transabyss_" + str(curr) + "_{assembly}", "{assembly}_" + str(curr) + "_transabyss.fasta-final.fa") for curr in KMERVALS]
    output:
        os.path.join(OUTPUTDIR, "transabyss", "{assembly}_transabyss.fasta")
    log:
        "logs/transabyss/outputlog_{assembly}_transabyssmerge.log"
    params:
        extra = "",
        minkval = MINKVAL,
        maxkval = MAXKVAL,
        prefixks = PREFIXKS
    threads: 4
    log:
        err = os.path.join("logs","transabyss_merge","outputlog_{assembly}_err.log"),
        out = os.path.join("logs","transabyss_merge","outputlog_{assembly}_err.log")
    conda: '../environment.yaml'
    shell:
        '''
        transabyss-merge {input.files} --mink {params.minkval} --maxk {params.maxkval} --prefixes {params.prefixks} --out {output} 2> {log.err} 1> {log.out}
        '''

rule transabyssmerge_cleanup:
    input:
        transabyssfile = os.path.join(OUTPUTDIR, "transabyss", "{assembly}_transabyss.fasta")
    output:
        assembled = os.path.join(ASSEMBLEDDIR, "{assembly}_transabyss.fasta")
    params:
        mergefile = os.path.join(OUTPUTDIR, "transabyss", "{assembly}_transabyss.fasta"),
        outdir = os.path.join(OUTPUTDIR, "transabyss_*_{assembly}"),
        scratch = os.path.join(SCRATCHDIR, "transabyss")
    threads: 4
    conda: '../environment.yaml'
    shell:
        '''
        mkdir -p {params.scratch}
        cp {input.transabyssfile} {output.assembled}
        if [ {params.outdir} != {params.scratch} ]
        then
            mv {params.mergefile} {params.scratch}
            mv {params.outdir} {params.scratch}
        fi
        '''